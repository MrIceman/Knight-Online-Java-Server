package com.knightonline.shared.network.packet;

import java.util.HashMap;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;

import javax.annotation.PostConstruct;

import org.springframework.stereotype.Component;

import com.knightonline.shared.network.common.MessageInfo;

/**
 * @author Mamaorha
 *
 */
@Component
public class PacketHandler
{
protected Map<String, BlockingQueue<MessageInfo>> requestQueueMap;
	
	@PostConstruct
	private void init()
	{
		requestQueueMap = new HashMap<String, BlockingQueue<MessageInfo>>();
		
		requestQueueMap.put(key, new LinkedBlockingQueue<MessageInfo>());	
	}
	
	public void addWork(MessageInfo info)
	{
		byte[] request = (byte[]) info.getRequest();
		
		//handle and decide on what map to go
		
	}
	
	public MessageInfo takeWork(String key) throws InterruptedException
	{
		validateQueue(key);	
		return requestQueueMap.get(key).take();
	}
}
