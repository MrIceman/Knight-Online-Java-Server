package com.knightonline.login.network.packet.handlers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;

import com.knightonline.login.data.enums.AccountLoginCodes;
import com.knightonline.login.data.enums.LoginResultCode;
import com.knightonline.shared.network.common.IPacketHandler;
import com.knightonline.shared.network.common.Packet;
import com.knightonline.shared.persistence.dao.IAccountDAO;
import com.knightonline.shared.utils.RegexValidator;
import com.knightonline.shared.utils.RegexValidator.Validator;

/**
 * @author Mamaorha
 *
 */
@Component
@Scope("prototype")
public class LoginHandler implements IPacketHandler
{
	@Autowired
	protected RegexValidator regexValidator;

	@Autowired
	protected IAccountDAO accountDAO;

	@Override
	public void handlePacket(Packet requestPacket)
	{
		Packet result = new Packet(requestPacket.getOpcode(), requestPacket.getServer());

		short resultCode = 0;

		String username = requestPacket.readStringFromByteBuffer();
		String password = requestPacket.readStringFromByteBuffer();

		if (!regexValidator.isValid(Validator.USERNAME, username) || !regexValidator.isValid(Validator.PASSWORD, password))
		{
			resultCode = LoginResultCode.AUTH_NOT_FOUND;
		}

		else
		{
			resultCode = accountLogin(username, password);
		}

		System.out.println();
	}
	
	private short accountLogin(String username, String password)
	{
		short resultCode = LoginResultCode.AUTH_NOT_FOUND;
		
		short nret = accountDAO.accountLoginProcedure(username, password);

		if (nret == AccountLoginCodes.NO_NATION_SELECTED || nret == AccountLoginCodes.KARUS || nret == AccountLoginCodes.ELMORAD)
		{
			// NOTE: 1298 returns 1 for "no nation selected" or "no characters on a nation"
			// returns 2 if the user have characters on Karus and returns 3 if use has
			// characters on elmorad. But we will ignore this bit and just access the fact
			// that they are able to login.
			
			// NOTE: check if player is online
			/*if (!dbCommand->Execute(string_format(_T(
					"SELECT nServerNo, strServerIP FROM CURRENTUSER WHERE strAccountID = \'%s\'"), strAccountID.c_str()))
			) g_pMain->ReportSQLError(m_dbConnection.GetError());
			if (dbCommand->hasData()) result = 0x05; // in game

			result = 0x01; // seccussful login*/
		}
		
		else
		{
			//check if the account is banned
			if(nret == AccountLoginCodes.BANNED)
			{
				resultCode = LoginResultCode.AUTH_BANNED;
			}
			// NOTE: else the user doesn't have an account or they are banned or they have
			// a nation other than the ones we are looking for
			
		}
		
		return resultCode;
	}
}
